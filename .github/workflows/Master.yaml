name: DevSecOps Workflow 
run-name: DevSecOps Workflow have id ${{ github.run_id }} and triggered by ${{ github.event_name }}
on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master
  
jobs:
  CI_Frontend:
    runs-on: ubuntu-latest
    steps:
      - name: checkout The Repository
        uses: actions/checkout@v4

      - name: Install JavaScripts
        uses: actions/setup-node@v4
        with: 
          node-version: '18'

      - name: Cauche npm Dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Install Dependencies
        working-directory: ./Application-Code/frontend
        run: npm install 

      - name: Run Eslint
        working-directory: ./Application-Code/frontend
        run: npm run lint

      - name: Test Application
        working-directory: ./Application-Code/frontend
        run: npm test -- --coverage

  CI_UI_Build:
    runs-on: ubuntu-latest
    needs: CI_Frontend
    steps:
      - name: checkout The Repository
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: ./Application-Code/frontend
          push: false
          load: true
          tags: bagato220/todoappfrontend:${{ github.run_id }}  

      - name: Check Using Trivy The Image 
        uses: aquasecurity/trivy-action@0.28.0
        with: 
          image-ref: bagato220/todoappfrontend:${{ github.run_id }}
          format: table
          scan-type: image 

      - name: Push the image 
        run: | 
          docker push bagato220/todoappfrontend:${{ github.run_id }}
      
    CI_Backend:
      runs-on: ubuntu-latest
      steps:
        - name: checkout the Repository
          uses: actions/checkout@v4

        - name: Install JavaScripts
          uses: actions/setup-node@v4
          with: 
            node-version: '18'

        - name: Install Dependencies
          working-directory: ./Application-Code/backend
          run: npm install 
          
        - name: Install Eslint
          run: |
            npm install --save-dev eslint

        - name: Run Eslint
          working-directory: ./Application-Code/backend
          run: npm run lint

          
